{"ast":null,"code":"var _jsxFileName = \"/home/home/Downloads/web_dev_udacity/web_dev_projects/hosted_projects/abhicart/frontend/src/screens/ShippingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShippingScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [fullname, setFullname] = useState(shippingAddress.fullname);\n  const [mobileno, setMobileno] = useState(shippingAddress.mobileno);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [state, setState] = useState(shippingAddress.state);\n  const [pincode, setPincode] = useState(shippingAddress.pincode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveShippingAddress({\n      fullname,\n      mobileno,\n      address,\n      city,\n      state,\n      pincode,\n      country\n    }));\n    history.push('/payment');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Shipping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"fullname\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter full name\",\n            value: fullname,\n            required: true,\n            onChange: e => setFullname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"mobileno\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"Moile number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter Mobile number\",\n            value: mobileno,\n            required: true,\n            onChange: e => setMobileno(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter address\",\n            value: address,\n            required: true,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter city\",\n            value: city,\n            required: true,\n            onChange: e => setCity(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"state\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter State\",\n            value: state,\n            required: true,\n            onChange: e => setState(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"pinCode\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"Pin Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter postal code\",\n            value: pincode,\n            required: true,\n            onChange: e => setPincode(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          md: 3,\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"border border-dark\",\n            type: \"text\",\n            placeholder: \"Enter country\",\n            value: country,\n            required: true,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShippingScreen, \"+Vnizvitl1vm7lYOqy1LrSVfCis=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ShippingScreen;\nexport default ShippingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShippingScreen\");","map":{"version":3,"sources":["/home/home/Downloads/web_dev_udacity/web_dev_projects/hosted_projects/abhicart/frontend/src/screens/ShippingScreen.js"],"names":["React","useState","Form","Button","Row","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","saveShippingAddress","ShippingScreen","history","cart","state","shippingAddress","fullname","setFullname","mobileno","setMobileno","address","setAddress","city","setCity","setState","pincode","setPincode","country","setCountry","dispatch","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button,Row,Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n  const [fullname,setFullname] = useState(shippingAddress.fullname)\n  const [mobileno,setMobileno] = useState(shippingAddress.mobileno)\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [state, setState] = useState(shippingAddress.state)\n  const [pincode, setPincode] = useState(shippingAddress.pincode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ fullname,mobileno,address, city, state, pincode, country}))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n     <CheckoutSteps step1 step2/>\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group as={Row} controlId='fullname'>\n          <Form.Label column md={3} >Full Name</Form.Label>\n          <Col>\n          <Form.Control\n            className=\"border border-dark\"\n            type='text'\n            placeholder='Enter full name'\n            value={fullname}\n            required\n            onChange={(e) => setFullname(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group  as={Row} controlId='mobileno'>\n          <Form.Label column md={3}>Moile number</Form.Label>\n          <Col>\n          <Form.Control\n            className=\"border border-dark\"\n            type='text'\n            placeholder='Enter Mobile number'\n            value={mobileno}\n            required\n            onChange={(e) => setMobileno(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId='address'>\n          <Form.Label column md={3} >Address</Form.Label>\n          <Col>\n          <Form.Control\n          className=\"border border-dark\"\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId='city'>\n          <Form.Label column md={3} >City</Form.Label>\n          <Col>\n          <Form.Control\n          className=\"border border-dark\"\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId='state'>\n          <Form.Label column md={3}>State</Form.Label>\n          <Col>\n          <Form.Control\n          className=\"border border-dark\"\n            type='text'\n            placeholder='Enter State'\n            value={state}\n            required\n            onChange={(e) => setState(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId='pinCode'>\n          <Form.Label column md={3}>Pin Code</Form.Label>\n          <Col>\n          <Form.Control\n          className=\"border border-dark\"\n            type='text'\n            placeholder='Enter postal code'\n            value={pincode}\n            required\n            onChange={(e) => setPincode(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} controlId='country'>\n          <Form.Label column md={3}>Country</Form.Label>\n          <Col>\n          <Form.Control\n          className=\"border border-dark\"\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n          </Col>\n        </Form.Group>\n\n          <Button type='submit' variant='primary'>\n          Continue\n          </Button>\n\n      </Form>\n\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen"]},"metadata":{},"sourceType":"module"}