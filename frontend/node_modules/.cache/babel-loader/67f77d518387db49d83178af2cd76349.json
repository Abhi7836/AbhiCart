{"ast":null,"code":"var _jsxFileName = \"/home/home/Downloads/web_dev_udacity/web_dev_projects/abhicart/frontend/src/screens/ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails, updateProduct } from '../actions/productActions';\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\nimport Rating from '../components/Rating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"name\",\n                placeholder: \"Enter name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"number\",\n                placeholder: \"Enter price\",\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                hidden: true,\n                className: \"border border-dark\",\n                type: \"text\",\n                placeholder: \"Enter image url\",\n                value: image,\n                onChange: e => setImage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                className: \"border border-dark file\",\n                id: \"image-file\",\n                label: image,\n                custom: true,\n                style: {\n                  color: 'red'\n                },\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"brand\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Brand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"text\",\n                placeholder: \"Enter brand\",\n                value: brand,\n                onChange: e => setBrand(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"countInStock\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Count In Stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"number\",\n                placeholder: \"Enter countInStock\",\n                value: countInStock,\n                onChange: e => setCountInStock(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"text\",\n                placeholder: \"Enter category\",\n                value: category,\n                onChange: e => setCategory(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              md: 3,\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                className: \"border border-dark\",\n                type: \"text\",\n                placeholder: \"Enter description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"my-3 p-3  rounded\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            src: image,\n            variant: \"top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              as: \"div\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: \"div\",\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: product.rating,\n                text: `${product.numReviews}reviews`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: \"h4\",\n              children: [\"\\u20B9\", price, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" \", countInStock, \" Pices\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: \"div\",\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              as: \"div\",\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"tGwP29U+IMS6phYQamHPqg4I56E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["/home/home/Downloads/web_dev_udacity/web_dev_projects/abhicart/frontend/src/screens/ProductEditScreen.js"],"names":["axios","React","useState","useEffect","Link","Form","Button","Row","Col","Card","useDispatch","useSelector","Message","Loader","listProductDetails","updateProduct","PRODUCT_UPDATE_RESET","Rating","ProductEditScreen","match","history","productId","params","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","dispatch","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value","color","rating","numReviews"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button,Row,Col,Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport Rating from '../components/Rating'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {loading: loadingUpdate,error: errorUpdate,success: successUpdate,} = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n    try {\n      const config = {\n        headers: {'Content-Type': 'multipart/form-data',},}\n      const { data } = await axios.post('/api/upload', formData, config)\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n       <Row className='justify-content-md-center'>\n       <Col xs={12} md={6}>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group as={Row} controlId='name'>\n              <Form.Label column md={3}>Name</Form.Label>\n              <Col>\n              <Form.Control\n                className=\"border border-dark\"\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId='price'>\n              <Form.Label column md={3}>Price</Form.Label>\n              <Col>            \n              <Form.Control\n                className=\"border border-dark\"\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n              </Col> \n            </Form.Group>\n\n            <Form.Group  as={Row} controlId='image'>\n              <Form.Label  column md={3}>Image</Form.Label>\n              <Col>\n              <Form.Control hidden\n                className=\"border border-dark\"\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              \n              <Form.File    \n                className=\"border border-dark file\"\n                id='image-file'\n                label={image} \n                custom\n                style={{color :'red'}}\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n              </Col>\n            </Form.Group>\n      \n            <Form.Group as={Row} controlId='brand'>\n              <Form.Label column md={3}>Brand</Form.Label>\n              <Col>\n              <Form.Control\n                className=\"border border-dark\"\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId='countInStock'>\n              <Form.Label column md={3}>Count In Stock</Form.Label>\n              <Col>\n              <Form.Control\n                className=\"border border-dark\"\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId='category'>\n              <Form.Label column md={3}>Category</Form.Label>\n              <Col>\n              <Form.Control\n                className=\"border border-dark\"\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}  controlId='description'>\n              <Form.Label column md={3}>Description</Form.Label>\n              <Col>\n              <Form.Control\n                className=\"border border-dark\"\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n              </Col>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col><Col md={4}>\n        <Card className='my-3 p-3  rounded'>\n             <Card.Img src={image} variant='top'/>\n         <Card.Body>\n          <Card.Title as='div'><strong>{name}</strong><p>{brand}</p></Card.Title>\n         <Card.Text as='div'>\n             <Rating value={product.rating} text={`${product.numReviews}reviews`}/>\n         </Card.Text>\n         <Card.Text as='h4'>₹{price} <strong> {countInStock} Pices</strong></Card.Text>\n         <Card.Text as='div'>{category}</Card.Text>\n         <Card.Text as='div'>{description}</Card.Text>\n         </Card.Body>\n       </Card>\n      </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}