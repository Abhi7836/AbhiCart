{"ast":null,"code":"import axios from 'axios';\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_FAIL, USER_LIST_SUCCESS, USER_LIST_REQUEST, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  document.location.href = '/login';\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/home/Downloads/web_dev_udacity/web_dev_projects/abhicart/frontend/src/actions/userActions.js"],"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_FAIL","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login =(email,password)=>\nasync(dispatch)=>{\n    try{\n        dispatch({type:USER_LOGIN_REQUEST})\n        const config ={headers:{'Content-Type' : 'application/json'}}\n        const {data} = await axios.post('/api/users/login',{email,password},config)\n        dispatch({type:USER_LOGIN_SUCCESS,payload:data})\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error){\n        dispatch({type:USER_LOGIN_FAIL,payload:error.response && error.response.data.message ? \n            error.response.data.message:error.response.message})\n    }\n}\n\nexport const logout =()=>(dispatch)=>{\n    localStorage.removeItem('userInfo')\n    localStorage.removeItem('cartItems')\n    localStorage.removeItem('shippingAddress')\n    localStorage.removeItem('paymentMethod')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n    document.location.href = '/login'\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({type: USER_REGISTER_REQUEST,})\n        const config = {headers: {'Content-Type': 'application/json'}}\n        const { data } = await axios.post('/api/users',{ name, email, password },config)\n        dispatch({type: USER_REGISTER_SUCCESS,payload: data})\n        dispatch({type: USER_LOGIN_SUCCESS,payload: data,})\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } \n    catch (error){\n        dispatch({type:USER_REGISTER_FAIL,payload:error.response && error.response.data.message ? \n            error.response.data.message:error.response.message})\n    }\n}\n    \nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {dispatch({type: USER_DETAILS_REQUEST,})\n        const {userLogin: { userInfo },} = getState()\n        const config = {headers: {Authorization: `Bearer ${userInfo.token}`,},}\n        const { data } = await axios.get(`/api/users/${id}`, config)\n        dispatch({type: USER_DETAILS_SUCCESS,payload: data,})\n    }catch (error) {\n        const message = error.response && error.response.data.message\n                       ? error.response.data.message:error.message\n        if (message === 'Not authorized, token failed') {dispatch(logout())}\n        dispatch({type: USER_DETAILS_FAIL,payload: message,})\n}}\n    \nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {dispatch({type: USER_UPDATE_PROFILE_REQUEST,})\n        const {userLogin: { userInfo },} = getState()\n        const config = {headers: {'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,},}\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n        dispatch({type: USER_UPDATE_PROFILE_SUCCESS,payload: data,})\n        dispatch({type: USER_LOGIN_SUCCESS,payload: data,})\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        const message =error.response && error.response.data.message\n            ? error.response.data.message: error.message\n        if (message === 'Not authorized, token failed') {dispatch(logout())}\n        dispatch({type: USER_UPDATE_PROFILE_FAIL,payload: message,})}\n}\n    \nexport const listUsers = () => async (dispatch, getState) => {\n    try {dispatch({type: USER_LIST_REQUEST,})\n        const {userLogin: { userInfo },} = getState()\n        const config = {headers: {Authorization: `Bearer ${userInfo.token}`,},}\n        const { data } = await axios.get(`/api/users`, config)\n        dispatch({type: USER_LIST_SUCCESS,payload: data,})\n    }catch (error) {\n        const message =error.response && error.response.data.message\n            ? error.response.data.message: error.message\n        if (message === 'Not authorized, token failed') {dispatch(logout())}\n        dispatch({type: USER_LIST_FAIL,payload: message,})\n    }\n}  \n    \nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {dispatch({type: USER_DELETE_REQUEST,})\n        const {userLogin: { userInfo },} = getState()\n        const config = {headers: {Authorization: `Bearer ${userInfo.token}`,},}\n        await axios.delete(`/api/users/${id}`, config)   \n        dispatch({ type: USER_DELETE_SUCCESS })\n    } catch (error) {\n        const message =error.response && error.response.data.message\n            ? error.response.data.message: error.message\n        if (message === 'Not authorized, token failed') {dispatch(logout())}\n        dispatch({type: USER_DELETE_FAIL,payload: message,})}\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {dispatch({type: USER_UPDATE_REQUEST,})\n        const {userLogin: { userInfo },} = getState()\n        const config = {\n        headers: {'Content-Type': 'application/json',\n            Authorization: `Bearer ${userInfo.token}`,\n        },}\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n        dispatch({ type: USER_UPDATE_SUCCESS })\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n        dispatch({ type: USER_DETAILS_RESET })\n    } catch (error) {\n        const message =error.response && error.response.data.message\n            ? error.response.data.message: error.message\n        if (message === 'Not authorized, token failed') {dispatch(logout())}\n        dispatch({type: USER_UPDATE_FAIL,payload: message,})}\n}"]},"metadata":{},"sourceType":"module"}